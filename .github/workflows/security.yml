name: Security Audit

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM UTC
  workflow_dispatch:
  push:
    paths:
      - 'package*.json'
      - '.github/workflows/security.yml'

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate --json > audit-results.json || true

      - name: Check for high/critical vulnerabilities
        run: |
          HIGH_VULNS=$(jq '.metadata.vulnerabilities.high // 0' audit-results.json)
          CRITICAL_VULNS=$(jq '.metadata.vulnerabilities.critical // 0' audit-results.json)

          echo "High vulnerabilities: $HIGH_VULNS"
          echo "Critical vulnerabilities: $CRITICAL_VULNS"

          if [ "$CRITICAL_VULNS" -gt 0 ] || [ "$HIGH_VULNS" -gt 5 ]; then
            echo "::error::Too many high/critical vulnerabilities found"
            exit 1
          fi

      - name: Check for outdated dependencies
        run: |
          npm outdated --json > outdated.json || true
          cat outdated.json

      - name: Scan Docker files
        run: |
          if [ -f "Dockerfile" ]; then
            # Basic Dockerfile security checks
            if grep -q "FROM.*:latest" Dockerfile; then
              echo "::warning::Using 'latest' tag in Dockerfile"
            fi

            if grep -q "RUN.*sudo" Dockerfile; then
              echo "::warning::Using sudo in Dockerfile"
            fi
          fi

      - name: Check for secrets in code
        run: |
          # Basic secret scanning
          if grep -r -i "password\|secret\|key\|token" src/ --include="*.ts" --include="*.js" | grep -v "//\|/\*" | grep "="; then
            echo "::warning::Potential secrets found in code"
          fi

      - name: Upload audit results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-audit-results
          path: |
            audit-results.json
            outdated.json
          retention-days: 30

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high
          deny-licenses: GPL-2.0, GPL-3.0
