{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mEAA8C;AAC9C,mEAA6B;AAE7B,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;AAElD,MAAM,iBAAiB;IAGrB;QAFQ,eAAU,GAAyB,IAAI,CAAC;QAG9C,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QAE/C,mBAAmB;QACnB,cAAG,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YACxB,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;YAC/C,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,uBAAuB;QACvB,cAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;YAC/B,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE,CAAC;gBAClC,cAAG,CAAC,IAAI,EAAE,CAAC;YACb,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,0BAA0B;QAC1B,cAAG,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,IAAI,wBAAa,CAAC,aAAa,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC/C,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,YAAY;QAClB,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAE3C,4BAA4B;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,wBAAa,CAAC;YAClC,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,GAAG;YACX,KAAK,EAAE,oBAAoB;YAC3B,cAAc,EAAE;gBACd,eAAe,EAAE,KAAK;gBACtB,gBAAgB,EAAE,IAAI;gBACtB,OAAO,EAAE,KAAK;aACf;YACD,IAAI,EAAE,KAAK,CAAC,yBAAyB;SACtC,CAAC,CAAC;QAEH,gCAAgC;QAChC,MAAM,WAAW,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA2CnB,CAAC;QAEF,4BAA4B;QAC5B,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;QAC/D,mDAA2B,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QAEvD,0BAA0B;QAC1B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAEvC,yBAAyB;QACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YACtC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,YAAY,EAAE,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,uBAAuB;QACvB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;YAChC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAC7C,CAAC;CACF;AAED,6BAA6B;AAC7B,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;AAC3D,IAAI,iBAAiB,EAAE,CAAC;;;;;;;;;;;AC1HxB,qC;;;;;;;;;;ACAA,+B;;;;;;;;;;ACAA,iC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://vsembed-ai-devtool/./src/main/main-minimal.ts","webpack://vsembed-ai-devtool/external commonjs2 \"electron\"","webpack://vsembed-ai-devtool/external node-commonjs \"fs\"","webpack://vsembed-ai-devtool/external node-commonjs \"path\"","webpack://vsembed-ai-devtool/webpack/bootstrap","webpack://vsembed-ai-devtool/webpack/before-startup","webpack://vsembed-ai-devtool/webpack/startup","webpack://vsembed-ai-devtool/webpack/after-startup"],"sourcesContent":["import { app, BrowserWindow } from 'electron';\nimport * as path from 'path';\n\nconsole.log('üöÄ Starting VSEmbed Application...');\n\nclass MinimalVSEmbedApp {\n  private mainWindow: BrowserWindow | null = null;\n\n  constructor() {\n    console.log('üì¶ Initializing app handlers...');\n    \n    // Handle app ready\n    app.whenReady().then(() => {\n      console.log('‚úÖ App ready, creating window...');\n      this.createWindow();\n    });\n\n    // Handle window closed\n    app.on('window-all-closed', () => {\n      console.log('ü™ü All windows closed');\n      if (process.platform !== 'darwin') {\n        app.quit();\n      }\n    });\n\n    // Handle activate (macOS)\n    app.on('activate', () => {\n      console.log('üîÑ App activated');\n      if (BrowserWindow.getAllWindows().length === 0) {\n        this.createWindow();\n      }\n    });\n  }\n\n  private createWindow(): void {\n    console.log('üèóÔ∏è Creating main window...');\n\n    // Create the browser window\n    this.mainWindow = new BrowserWindow({\n      width: 1200,\n      height: 800,\n      title: 'VSEmbed AI DevTool',\n      webPreferences: {\n        nodeIntegration: false,\n        contextIsolation: true,\n        sandbox: false\n      },\n      show: false // Don't show until ready\n    });\n\n    // Load a simple HTML page first\n    const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>VSEmbed AI DevTool</title>\n        <style>\n          body {\n            margin: 0;\n            padding: 20px;\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n            background: #1e1e1e;\n            color: #fff;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            flex-direction: column;\n          }\n          .status {\n            text-align: center;\n            max-width: 600px;\n          }\n          .success { color: #4ade80; }\n          .loading { color: #fbbf24; }\n          .error { color: #f87171; }\n        </style>\n      </head>\n      <body>\n        <div class=\"status\">\n          <h1>üöÄ VSEmbed AI DevTool</h1>\n          <p class=\"success\">‚úÖ Electron main process is working!</p>\n          <p class=\"loading\">‚ö° Basic window rendering successful</p>\n          <hr style=\"margin: 20px 0; border: 1px solid #444;\">\n          <h3>Next Steps:</h3>\n          <ul style=\"text-align: left;\">\n            <li>‚úÖ Main process initialization</li>\n            <li>‚è≥ React renderer setup</li>\n            <li>‚è≥ IPC communication</li>\n            <li>‚è≥ Component integration</li>\n          </ul>\n        </div>\n      </body>\n      </html>\n    `;\n\n    // Write temporary HTML file\n    const tempHtmlPath = path.join(__dirname, 'temp-minimal.html');\n    require('fs').writeFileSync(tempHtmlPath, htmlContent);\n\n    // Load the temporary file\n    this.mainWindow.loadFile(tempHtmlPath);\n\n    // Show window when ready\n    this.mainWindow.once('ready-to-show', () => {\n      console.log('‚ú® Window ready to show');\n      this.mainWindow?.show();\n      this.mainWindow?.webContents.openDevTools();\n    });\n\n    // Handle window closed\n    this.mainWindow.on('closed', () => {\n      console.log('‚ùå Main window closed');\n      this.mainWindow = null;\n    });\n\n    console.log('üèÅ Window creation complete');\n  }\n}\n\n// Initialize the minimal app\nconsole.log('üéØ Creating minimal VSEmbed app instance...');\nnew MinimalVSEmbedApp();\n","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main/main-minimal.ts\");\n",""],"names":[],"sourceRoot":""}